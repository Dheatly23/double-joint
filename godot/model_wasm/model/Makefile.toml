env_scripts = [
'''
#!@duckscript
wasm_snip = which wasm-snip
set_env WASM_SNIP ${wasm_snip}

wasm_opt = which wasm-opt
set_env WASM_OPT ${wasm_opt}
'''
]

[env.development]
BUILD_PROFILE = "dev"
TARGET_PROFILE = "debug"

[env.production]
BUILD_PROFILE = "release"
TARGET_PROFILE = "release"

[tasks.build-stable]
command = "cargo"
args = [
  "build",
  "--profile",
  "${BUILD_PROFILE}",
  "--target",
  "wasm32-unknown-unknown",
]

[tasks.build-nightly]
command = "cargo"
args = [
  "build",
  "--profile",
  "${BUILD_PROFILE}",
  "--target",
  "wasm32-unknown-unknown",
  "--features",
  "core-simd",
]

[[tasks.build_.run_task]]
name = "build-nightly"
condition = { channels = ["nightly"] }

[[tasks.build_.run_task]]
name = "build-stable"

[tasks.deploy]
dependencies = ["build_"]
script_runner = "@duckscript"
script = '''
f = concat ${CARGO_MAKE_CRATE_FS_NAME} ".wasm"

src_file = join_path ${CARGO_MAKE_CRATE_TARGET_DIRECTORY} wasm32-unknown-unknown ${TARGET_PROFILE} ${f}
dst_file = join_path ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} .. ${f}

echo Copy ${src_file} to ${dst_file}
cp ${src_file} ${dst_file}

if set ${WASM_SNIP}
  # Apparently wasm-snip does not support SIMD yet :(
  #echo "Running wasm-snip"
  #exec --fail-on-error ${WASM_SNIP} --snip-rust-panicking-code ${dst_file} -o ${dst_file}
end

if set ${WASM_OPT}
  echo "Running wasm-opt"
  exec --fail-on-error ${WASM_OPT} -O4 -g ${dst_file} -o ${dst_file}
end
'''
